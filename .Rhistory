View(dat)
RVname$data<-dat[a,1]
RVname$data<-dat[a,1]
RVname$data
runApp()
runApp()
View(testfinal)
View(data)
finaltest22<-dcast(testfinal, Task+Category ~ Employee_Name, value.var = c('Actual_Days'),sum)
View(finaltest22)
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand",
"Project End Month","Status","Task","Employee_Name","Category","Month"),
extra='drop',sep ='_') #%>% data
g<-merge(data,datatask,'Task'='Task')
View(g)
View(datatask)
datatask<-tasksMain %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand",
"Project End Month","Status","Task","Employee_Name","Category","Month"),
extra='drop',sep ='_') #%>% data
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand",
"Project End Month","Status","Task","Employee_Name","Category","Month"),
extra='drop',sep ='_') #%>% data
data$Task.details <- datatask$Task.details[match(data$Task, datatask$Task)]
View(data)
runApp()
runApp()
runApp()
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
months<-month_list_scope[n1:n2]
data1<-data[data$Month %in% months,]
View(data)
testfinal<-sqldf("select [Employee_Name], Task.details, Category, sum(Planned_Days) as [Actual_Days]
from data
group by [Employee_Name], Task.details, Month,Category" )
testfinal<-sqldf("select [Employee_Name], Task.details, Category, sum(Planned_Days) as [Actual_Days]
from data
group by [Employee_Name], Task.details, Month,Category" )
View(data)
testfinal<-sqldf("select Employee_Name, Task.details, Category, sum(Planned_Days) as [Actual_Days]
from data
group by Employee_Name, Task.details, Month,Category" )
View(datatask)
colnames(datatask)<-c("TaskName","Task")
View(datatask)
runApp()
runApp()
runApp()
runApp()
runApp()
dat <- iris[c(1,2,3,51,52,53,101,102,103), c(5,1,2,3,4)]
View(dat)
output[["table"]] <- renderDT({
dtable <- datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
dtable <- datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
View(dtable)
datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
dtable <- datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
path <- "U:/Data/shiny/DT/www" # folder containing dataTables.rowsGroup.js
dep <- htmltools::htmlDependency(
"RowsGroup", "2.0.0",
path, script = "dataTables.rowsGroup.js")
dtable$dependencies <- c(dtable$dependencies, list(dep))
dtable
path <- "./www"
dep <- htmltools::htmlDependency(
"RowsGroup", "2.0.0",
path, script = "dataTables.rowsGroup.js")
dtable$dependencies <- c(dtable$dependencies, list(dep))
dtable
dep <- htmltools::htmlDependency(
"RowsGroup", "2.0.0",
path, script = "dataTables.rowsGroup.js")
View(dep)
output[["table"]] <- renderDT({
dtable <- datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
path <- "./www" # folder containing dataTables.rowsGroup.js
dep <- htmltools::htmlDependency(
"RowsGroup", "2.0.0",
path, script = "dataTables.rowsGroup.js")
dtable$dependencies <- c(dtable$dependencies, list(dep))
dtable
})
dtable <- datatable(dat, rownames = FALSE,
options = list(
rowsGroup = list(0) # merge cells of column 1
))
path <- "./www" # folder containing dataTables.rowsGroup.js
dep <- htmltools::htmlDependency(
"RowsGroup", "2.0.0",
path, script = "dataTables.rowsGroup.js")
dtable$dependencies <- c(dtable$dependencies, list(dep))
dtable
install.packages("DT")
install.packages("DT")
library(htmltools)
setwd("C:/Users/sanghaip/OneDrive - Merck Sharp & Dohme, Corp/Desktop/WorkTrackerV2_Final/WorkTrackerFINAL_V2")
tbl <- data.frame("A" = c( 1L, "question"),
"B" = c( 2L, "answer"))
container_dt= withTags(table(
class = 'display',
thead(
tr(
th(class = 'dt-center',colspan = 2, 'AB')),
tr(
lapply((c('foo', 'bar')), th)))))
View(container_dt)
View(country_info)
View(tbl)
datatable(tbl, container = container_dt, rownames = F, class = "",
options = list(autoWidth = T,
columnDefs = list(list(className = "dt-center", targets = "_all"),
list(width = "40px", target = "_all"))))
library(shiny)
library(DT)
datatable(tbl, container = container_dt, rownames = F, class = "",
options = list(autoWidth = T,
columnDefs = list(list(className = "dt-center", targets = "_all"),
list(width = "40px", target = "_all"))))
View(container_dt)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('C:/Users/sanghaip/OneDrive - Merck Sharp & Dohme, Corp/Desktop/WorkTrackerV2_Final/WorkTrackerV2')
runApp()
runApp()
runApp()
runApp()
data <- taskresource %>% separate(Primary.Key, c("Team",
"Sub Team", "Project_Name", "Classification", "Target Audience",
"Geography", "Functional Group", "Stakeholders", "TA",
"Brand", "Project End Month", "Status", "Task", "Employee_Name",
"Category", "Month"), extra = "drop", sep = "_")
View(data)
data <- data[data$Team == a1, ]
data <- data[data$`Sub Team` == a2, ]
m1 <- input$startreport
m2 <- input$endreport
View(data)
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
#
m1<-input$startreport
m2<-input$endreport
testfinal<-sqldf("select [Employee_Name], Project_Name, Category,`Project End Month`, sum(Planned_Days) as [Actual_Days]
from data
group by [Employee_Name], Project_Name, Month,Category" )
View(testfinal)
finaltest22<-dcast(testfinal, Project_Name+Category+`Project End Month` ~ Employee_Name, value.var = c('Actual_Days'),sum)
View(finaltest22)
c<-colnames(finaltest22)
finaltest22<-finaltest22[,c(1,2,4:length(c),3)]
View(finaltest22)
runApp()
runApp()
View(finaltest22)
finaltest22<-finaltest22[,c(1:x,ncol(finaltest22),(x+1)]
finaltest22<-finaltest22[,c(1:x,ncol(finaltest22),(x+1))]
View(finaltest22)
finaltest22$`Project End Month`[finaltest22$`Project End Month`=="Adhoc"]<-""
View(finaltest22)
runApp()
runApp()
runApp()
runApp()
runApp()
finaltest22<-dcast(testfinal, Project_Name+Category+`Project End Month` ~ Employee_Name, value.var = c('Actual_Days'),sum)
shiny::runApp()
runApp()
shiny::runApp()
status
finaltest22<-cbind(finaltest22,status)
View(finaltest22)
runApp()
View(testfinal)
View(finaltest22)
runApp()
a1 <- input$mainTeamreport
a2 <- input$Subteamreport
data <- taskresource %>% separate(Primary.Key, c("Team",
"Sub Team", "Project_Name", "Classification", "Target Audience",
"Geography", "Functional Group", "Stakeholders", "TA",
"Brand", "Project End Month", "Status", "Task", "Employee_Name",
"Category", "Month"), extra = "drop", fill = "right",
sep = "_")
View(data)
runApp()
View(taskresource)
runApp()
View(data)
View(datatask)
View(t)
datatask<-t %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","TaskType","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Tasknumber","extra"),
extra='drop',sep ='_')
View(datatask)
View(datatask)
View(datuse)
View(g)
View(rsctemp2)
runApp()
View(data)
View(data)
View(data)
View(data)
data<-data[!is.na[data$Project_Name],]
data<-data[!is.na(data$Project_Name),]
View(data)
View(datatask)
View(datuse)
View(g)
b
View(tu1)
View(tu2)
pk1
tu[i,j]
View(tu)
pk1
runApp()
data2<-t %>% separate(Primary.Key,
c( "Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Task"),
extra='drop',fill = "right",sep ='_' ) #%>% data
View(data2)
View(t)
runApp()
a1 <- input$mainTeamreport
a2 <- input$Subteamreport
data <- taskresource %>% separate(Primary.Key, c("Team",
"Sub Team", "Project_Name", "Classification", "Target Audience",
"Geography", "Functional Group", "Stakeholders", "TA",
"Brand", "Project End Month", "Status", "Task", "Employee_Name",
"Category", "Month"), extra = "drop", fill = "right",
sep = "_")
View(data)
data<-data[!is.na(data$Project_Name),]
View(data)
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
m1<-input$startreport
m2<-input$endreport
tempdat<-data[data$Project_Name=="Adhoc",]
data<-data[!(data$Project_Name=="Adhoc"),]
tempdat<-tempdat[,c(1:13,15,16,14,17)]
colnames(tempdat)<-colnames(data)
data<-rbind(data,tempdat)
View(data)
!m2=="" && !m1==""
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
months<-month_list_scope[n1:n2]
data1<-data[data$Month %in% months,]
months2<-month_list_scope[n1:length(month_list_scope)]
data2<-data[!(data$Month %in% months2),]
View(data1)
months2<-NULL
data2<-data[!(data$Month %in% months2),]
months2<-month_list_scope
data2<-data[!(data$Month %in% months2),]
test33<-sqldf("select [Employee_Name], Project_Name, Category,`Project End Month`, sum(Planned_Days) as [Actual_Days]
from data2
group by [Employee_Name], Project_Name, Month,Category" )
test22<-sqldf("select [Employee_Name], Project_Name, Category,`Project End Month`, sum(Planned_Days) as [Actual_Days]
from data1
group by [Employee_Name], Project_Name, Month,Category" )
nrow(test33)!=0
runApp()
runApp()
runApp()
RVname$data
a1 <- input$mainTeamreport
a2 <- input$Subteamreport
p1 <- RVname$data
t <- tasksMain
t <- t[!is.na(t$Project.Name), ]
t <- t[t$Team == a1, ]
t <- t[t$Subteam == a2, ]
t <- t[t$Project.Name == p1, ]
View(t)
datatask <- t %>% separate(Primary.Key, c("Team", "Sub Team",
"Project_Name", "Classification", "Target Audience",
"Geography", "Functional Group", "Stakeholders",
"TA", "Brand", "Project End Month", "Status", "Task",
"Employee_Name", "Category", "Month"), extra = "drop",
fill = "right", sep = "_")
data <- taskresource %>% separate(Primary.Key, c("Team",
"Sub Team", "Project_Name", "Classification", "Target Audience",
"Geography", "Functional Group", "Stakeholders",
"TA", "Brand", "Project End Month", "Status", "Task",
"Employee_Name", "Category", "Month"), extra = "drop",
fill = "right", sep = "_")
View(datatask)
View(data)
data<-data[!is.na(data$Project_Name),]
datatask<-datatask[!is.na(datatask$Project_Name),]
tempdat<-data[data$Project_Name=="Adhoc",]
data<-data[!(data$Project_Name=="Adhoc"),]
tempdat<-tempdat[,c(1:13,15,16,14,17)]
colnames(tempdat)<-colnames(data)
data<-rbind(data,tempdat)
View(data)
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
data<-data[data$`Project_Name`==p1,]
View(data)
datatask<-datatask[,c(3,19)]
colnames(datatask)<-c("TaskName","Task")
View(datatask)
data$TaskName <- datatask$TaskName[match(data$Task, datatask$Task)]
View(data)
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
data<-data[data$`Project_Name`==p1,]
m1<-input$startreport
m2<-input$endreport
!m2=="" && !m1==""
(m2=="" & m1!="") | (m1=="" & m2!="")
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
months<-month_list_scope[ n1:length(month_list_scope) ]
months2<-month_list_scope[n1:length(month_list_scope)]
data1<-data[data$Month %in% months,]
View(data1)
nrow(data1)==0
runApp()
a1<-input$mainTeamreport
a2<-input$Subteamreport
p1<-RVname$data
t<-tasksMain
t<-t[!is.na(t$Project.Name),]
t<-t[t$Team==a1,]
t<-t[t$Subteam==a2,]
t<-t[t$Project.Name==p1,]
datatask<-t %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand",
"Project End Month","Status","Task","Employee_Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand",
"Project End Month","Status","Task","Employee_Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
tempdat<-data[data$Project_Name=="Adhoc",]
data<-data[!(data$Project_Name=="Adhoc"),]
tempdat<-tempdat[,c(1:13,15,16,14,17)]
colnames(tempdat)<-colnames(data)
data<-rbind(data,tempdat)
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
data<-data[data$`Project_Name`==p1,]
datatask<-datatask[,c(3,19)]
colnames(datatask)<-c("TaskName","Task")
data$TaskName <- datatask$TaskName[match(data$Task, datatask$Task)]
data<-data[data$Team==a1,]
data<-data[data$`Sub Team`==a2,]
data<-data[data$`Project_Name`==p1,]
m1<-input$startreport
m2<-input$endreport
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
months<-month_list_scope[n1:n2]
data1<-data[data$Month %in% months,]
months2<-month_list_scope[n1:length(month_list_scope)]
data2<-data[!(data$Month %in% months2),]
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
if(m2==""){
months<-month_list_scope[ n1:length(month_list_scope) ]
months2<-month_list_scope[n1:length(month_list_scope)]
}
else {
months<-month_list_scope[ 1: n2]
#months2<-month_list_scope[n1:length(month_list_scope)]
months2<-month_list_scope
}
n1<-which(m1 == month_list_scope)
n2<-which(m2 == month_list_scope)
months<-month_list_scope[ n1:length(month_list_scope) ]
months2<-month_list_scope[n1:length(month_list_scope)]
months2
months
View(data2)
data<-data[!is.na(data$Project_Name),]
data1<-data[data$Month %in% months,]
data2<-data[!(data$Month %in% months2),]
View(data2)
View(data1)
View(data2)
data3<-data2[(data2$TaskName%in%data1$TaskName),]
data2<-data2[(data2$TaskName%in%data1$TaskName),]
runApp()
runApp()
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Task","Employee Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
View(data)
data<-data[!is.na(data$`Project Name`),]
data<-data[data$Category=="Actuals",]
data<-data[data$Team==input$mainTeamreport,]
data<-data[data$`Sub Team`==input$Subteamreport,]
View(data)
t<-tasksMain
datatask<-t %>% separate(Primary.Key,
c("Team", "Sub Team","Project Name","TaskType","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Tasknumber"),
extra='drop',fill = "right",sep ='_')
View(datatask)
datatask<-datatask[!is.na(datatask$Project.Name),]
datuse<-as.data.frame(cbind( datatask$Team, datatask$Subteam ,datatask$`Project Name`,datatask$Task.category,datatask$Tasknumber))
datuse[] <- lapply(datuse, as.character)
g<- left_join(data, datuse, by = c("Team" = "V1" ,"Sub Team" = "V2", "Project Name" = "V3", "Task" = "V5" ))
View(g)
View(datatask)
View(g)
View(t)
View(datuse)
View(data)
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Task","Employee Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
View(data)
data<-data[!is.na(data$`Project Name`),]
tempdat<-data[data$Project_Name=="Adhoc", ]
data<-data[!(data$Project_Name=="Adhoc"), ]
tempdat<-tempdat[,c(1:13,15,16,14,17)]
colnames(tempdat)<-colnames(data)
data<-rbind(data,tempdat)
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Task","Employee Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
data<-data[!is.na(data$`Project Name`),]
tempdat<-data[data$Project_Name=="Adhoc", ]
View(data)
data<-data[!is.na(data$`Project Name`),]
tempdat<-data[data$`Project Name`=="Adhoc", ]
data<-data[!(data$`Project Name`=="Adhoc"), ]
tempdat<-tempdat[,c(1:13,15,16,14,17)]
colnames(tempdat)<-colnames(data)
data<-rbind(data,tempdat)
View(data)
data<-data[data$Category=="Actuals",]
data<-data[data$Team==input$mainTeamreport,]
data<-data[data$`Sub Team`==input$Subteamreport,]
t<-tasksMain
datatask<-t %>% separate(Primary.Key,
c("Team", "Sub Team","Project Name","TaskType","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Tasknumber"),
extra='drop',fill = "right",sep ='_')
datatask<-datatask[!is.na(datatask$Project.Name),]
datuse<-as.data.frame(cbind( datatask$Team, datatask$Subteam ,datatask$`Project Name`,datatask$Task.category,datatask$Tasknumber))
datuse[] <- lapply(datuse, as.character)
g<- left_join(data, datuse, by = c("Team" = "V1" ,"Sub Team" = "V2", "Project Name" = "V3", "Task" = "V5" ))
View(g)
m1<-input$startreport
m2<-input$endreport
View(g)
!m2=="" && !m1==""
View(g)
runApp()
runApp()
View(summary_data)
summary_data$percent_value[is.na(summary_data$percent_value)]
summary_data$percent_value[is.na(summary_data$percent_value)]<-0
View(summary_data)
runApp()
runApp()
View(summary_data)
shiny::runApp()
View(summary_data)
runApp()
taskresource<-read.csv("./data/taskemployee.csv", header = TRUE, stringsAsFactors = FALSE)
data<-taskresource %>% separate(Primary.Key,
c("Team", "Sub Team","Project_Name","Classification","Target Audience","Geography","Functional Group","Stakeholders","TA","Brand","Project End Month","Status","Task","Employee Name","Category","Month"),
extra='drop',fill = "right",sep ='_') #%>% data
runApp()
View(summary_data)
View(summary_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
